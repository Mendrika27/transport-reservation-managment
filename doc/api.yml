openapi: '3.0.2'
info:
  title: API
  description: Transport reservation management
  version: '1.0'
servers:
  - url: https://api.server.test/v1
paths:
  /users:
    get:
      tags:
        - Users
      operationId: getUser
      description: Get a list of users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
        '400':
          description: BadRequest
    put: 
      tags:
        - Users
      operationId: createUsers
      description: Multiple status values can be provided with comma separated strings
      responses:
        '201': 
          description: Created

        '400':
          description: BadRequest
        '401':
          description: Unauthorized
    
  /clients/{id}:
    get:
      tags:
        - Users
      operationId: getUser
      description: Get a list of Users
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
        '400':
          description: BadRequest
  /travels:
    get:
      tags:
        - Travels 
      operationId: getTravel
      description: Get all trips
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/travel'
        '400':
          description: BadRequest
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - Travels
      operationId: putTravel
      description: Book your trip !
      responses:
        '200':
          description: OK
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/travel'
        '201':
          description: Created
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/createTravel'        
  /travels/{id}:
    get:
      tags:
        - Travels 
      operationId: getTravel
      description: Get all trips
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/travel'
        '400':
          description: BadRequest
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
        tags:
          - Travels
        operationId: deleteTrip
        description: Cancel a trip
        responses:
          '200': 
            description: Deleted
          '400':
            description: BadRequest
          '403': 
            description: Forbidden
          '404':
            description: Not Found
  /offers:
    get: 
      tags:
        - Offer 
      operationId: getOffer
      description: Get all Offer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        '400': 
          description: BadRequest
        '403':
          description: Forbidden
        '404': 
          description: NotFound
  /offers/{id}:
    get: 
      tags:
        - Offer 
      operationId: getOffer
      description: Get a specific Offer
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        '400': 
          description: BadRequest
        '403':
          description: Forbidden
        '404': 
          description: NotFound
  /towns:
    get:
      tags:
        - Towns  
      operationId: getTown
      description: Get a list of destination cities for your trip
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/towns'
        '400':
          description: BadRequest
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /towns/{id}:
    get:
      tags:
        - Towns  
      operationId: getTown
      description: Get a list of destination cities for your trip
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/towns'
        '400':
          description: BadRequest
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    createUser:
      type: object
      properties:
        name:
          type: string
        lastName:
          type: string
        cin:
          type: string
        contact:
          type: string
    users:
      type: object
      properties:
        id: 
          type: integer
        name:
          type: string
        lastName:
          type: string
        cin: 
          type: string
        contact:
          type: string
    createTravel:
        type: object
        properties:
          reservationDate:
            type: string
          place:
            type: string
          amountPaid:
            type: integer
    travel:
      allOf:
        - $ref: '#/components/schemas/offer'
        - $ref: '#/components/schemas/towns'
      properties:
        id:
          type: integer
        date:
          type: string
        hours:
          type: string
        places's number available:
          type: integer
    offer: 
      type: object
      properties:
        id:
          type: integer
        tarif:
          type: integer
        label: 
          type: string
          enum: 
            - Lite
            - Premium
    towns: 
      type: object
      properties:
        id:
          type: integer
        nameTown:
          type: string